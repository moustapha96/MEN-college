# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  pdf_directory: "%kernel.project_dir%/public/uploads"
  synthese_rapports:  "%kernel.project_dir%/public/syntheses/"
  CHATGPT_KEY: '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'
  openai_api_key: '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'
  session_max_idle_time: 1800 


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name

    Symfony\Component\HttpKernel\KernelInterface: '@kernel'

    
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\EventListener\LoginEventListener:
        tags:
            - { name: kernel.event_listener, event: security.interactive_login , method: onLogin }


    App\EventListener\LogoutEventListener:
        tags:
            - { name: kernel.event_listener, event: security.logout, method: onLogout }

   
    App\Service\ChatGPTService:
        arguments:
            $apiKey: '%CHATGPT_KEY%'

  
    App\Service\DataConfigurationService:
        arguments:
            $configurationRepository: '@App\Repository\ConfigurationRepository'


    App\Twig\AppExtension:
        arguments:
            $configurationService: '@App\Service\DataConfigurationService'
        tags:
            - { name: twig.extension }

    App\Service\OpenAIService:
        arguments:
            $apiKey: '%env(OPENAI_API_KEY)%'
            $openaiEndpoint: 'https://api.openai.com'

    # App\EventListener\ExceptionSubscriber:
    #     arguments:
    #         $params: '@parameter_bag'
    #     tags:
    #         - { name: 'kernel.event_subscriber' }

    
    App\WebSocket\ChatWebSocket:
        autowire: true

    App\Command\WebSocketServerCommand:
        arguments:
            $chatWebSocket: '@App\WebSocket\ChatWebSocket'

    App\EventListener\DatabaseInitializer:
        autowire: true

    App\EventSubscriber\KernelSubscriber:
        tags:
            - { name: kernel.event_subscriber }

   
    App\EventListener\SessionIdleHandler:
        arguments: ["%session_max_idle_time%"]
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }